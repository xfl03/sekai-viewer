{"version":3,"sources":["utils/i18nDuration.ts","components/EventDetail.tsx"],"names":["languageMap","Map","humanizer","createHumanizer","languages","short_en","y","mo","w","d","h","m","s","ms","useDurationI18n","i18n","useTranslation","language","get","useCallback","duration","options","fallbacks","useStyle","makeStyles","theme","bannerImg","maxWidth","eventImg","cursor","tabpanel","padding","spacing","EventDetail","contentTransMode","t","eventId","useParams","classes","layoutClasses","useLayoutStyles","assetT","useAssetI18n","humanizeDuration","useCachedData","events","eventDeckBonuses","gameCharacterUnits","resourceBoxes","honors","useRealtimeEventData","Number","refreshData","rtRanking","useState","event","setEvent","eventDeckBonus","setEventDeckBonus","imgTabVal","setImgTabVal","nextRefreshTime","setNextRefreshTime","remainingTime","setRemainingTime","pastTimePercent","setPastTimePercent","visible","setVisible","activeIdx","setActiveIdx","getRankingDegreeImg","reward","honor","find","id","resBox","resourceBoxPurpose","eventRankingRewards","resourceBoxId","details","detail","resourceType","resourceId","process","assetbundleName","getRankingDegreeName","name","getRankingDegreeFrameImg","degreeFrameMap","honorRarity","getRankingDegreeRankImg","getRankingDegreeRankName","levels","description","useEffect","length","elem","filter","currentTime","Date","now","startAt","rankingAnnounceAt","cron","CronJob","stop","nextDate","start","interval","window","setInterval","clearInterval","update","aggregateAt","undefined","progressPercent","units","round","toFixed","getEventImages","src","alt","downloadUrl","variant","className","header","content","value","onChange","_","v","scrollButtons","label","root","container","direction","item","xs","md","onClick","style","width","margin","controls","bgmAssetbundleName","replace","wrap","justify","alignItems","fontWeight","eventType","sm","maxHeight","attrIconMap","cardAttr","bonusRate","slice","map","idx","key","charaIcons","gcu","gameCharacterUnitId","gameCharacterId","align","toLocaleString","closedAt","distributionStartAt","distributionEndAt","time","color","fromNow","eventRankingRewardRanges","fromRank","toRank","position","top","left","right","first10","rt","rank","score","onClose","images","zIndex","activeIndex","downloadable","downloadInNewWindow","onMaskClick","zoomSpeed"],"mappings":"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","file":"static/js/16.8302ec70.chunk.js","sourcesContent":["import {\n  HumanizerOptions,\n  humanizer as createHumanizer,\n} from \"humanize-duration\";\nimport { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst fallbackLang = \"en\";\n\n// map from our (i18next's) language code to humanize-duration's language code\nconst languageMap = new Map<string, string>([\n  //\n  [\"zh-CN\", \"zh_CN\"],\n  [\"zh-TW\", \"zh_TW\"],\n]);\n\nconst humanizer = createHumanizer({\n  languages: {\n    // TODO: add langs here\n\n    // short langs\n    short_en: {\n      y: () => \"y\",\n      mo: () => \"mo\",\n      w: () => \"w\",\n      d: () => \"d\",\n      h: () => \"h\",\n      m: () => \"m\",\n      s: () => \"s\",\n      ms: () => \"ms\",\n    },\n  },\n});\n\nexport function useDurationI18n() {\n  const { i18n } = useTranslation();\n\n  const language = languageMap.get(i18n.language) || i18n.language;\n\n  const humanize = useCallback(\n    (duration: number, options?: HumanizerOptions) =>\n      humanizer(duration, {\n        language,\n        fallbacks: [fallbackLang],\n        ...options,\n      }),\n    [language]\n  );\n\n  const humanizeShort = useCallback(\n    (duration: number, options?: HumanizerOptions) =>\n      humanizer(duration, {\n        language: `short_${language}`,\n        fallbacks: [language, `short_${fallbackLang}`, fallbackLang],\n        ...options,\n      }),\n    [language]\n  );\n\n  return [humanize, humanizeShort] as const;\n}\n","import {\n  Box,\n  Divider,\n  Grid,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Tab,\n  Tabs,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { useLayoutStyles } from \"../styles/layout\";\nimport { TabContext, TabPanel } from \"@material-ui/lab\";\nimport { CronJob } from \"cron\";\nimport moment from \"moment\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport Viewer from \"react-viewer\";\nimport { ImageDecorator } from \"react-viewer/lib/ViewerProps\";\nimport {\n  ContentTransModeType,\n  EventRankingRewardRange,\n  IEventDeckBonus,\n  IEventInfo,\n  IGameCharaUnit,\n  IHonorInfo,\n  IResourceBoxInfo,\n} from \"../types\";\nimport { useCachedData, useRealtimeEventData } from \"../utils\";\nimport { attrIconMap, charaIcons, degreeFrameMap } from \"../utils/resources\";\nimport { useAssetI18n } from \"../utils/i18n\";\nimport { useDurationI18n } from \"../utils/i18nDuration\";\n\nconst useStyle = makeStyles((theme) => ({\n  bannerImg: {\n    maxWidth: \"100%\",\n  },\n  eventImg: {\n    maxWidth: \"100%\",\n    cursor: \"pointer\",\n  },\n  tabpanel: {\n    padding: theme.spacing(\"1%\", 0, 0, 0),\n  },\n  \"grid-out\": {\n    padding: theme.spacing(\"1%\", \"0\"),\n  },\n}));\n\nconst EventDetail: React.FC<{\n  contentTransMode: ContentTransModeType;\n}> = ({ contentTransMode }) => {\n  const { t, i18n } = useTranslation();\n  const { eventId } = useParams<{ eventId: string }>();\n  const classes = useStyle();\n  const layoutClasses = useLayoutStyles();\n  const { assetT } = useAssetI18n();\n  const [humanizeDuration] = useDurationI18n();\n\n  const [events] = useCachedData<IEventInfo>(\"events\");\n  const [eventDeckBonuses] = useCachedData<IEventDeckBonus>(\"eventDeckBonuses\");\n  const [gameCharacterUnits] = useCachedData<IGameCharaUnit>(\n    \"gameCharacterUnits\"\n  );\n  const [resourceBoxes] = useCachedData<IResourceBoxInfo>(\"resourceBoxes\");\n  const [honors] = useCachedData<IHonorInfo>(\"honors\");\n  const [refreshData, rtRanking] = useRealtimeEventData(Number(eventId));\n\n  const [event, setEvent] = useState<IEventInfo>();\n  const [eventDeckBonus, setEventDeckBonus] = useState<IEventDeckBonus[]>([]);\n  const [imgTabVal, setImgTabVal] = useState<string>(\"0\");\n  // const [intervalId, setIntervalId] = useState<number>();\n  const [nextRefreshTime, setNextRefreshTime] = useState<moment.Moment>();\n  const [remainingTime, setRemainingTime] = useState<string>(\"\");\n  const [pastTimePercent, setPastTimePercent] = useState<number>(0);\n  const [visible, setVisible] = useState<boolean>(false);\n  const [activeIdx, setActiveIdx] = useState<number>(0);\n\n  useEffect(() => {\n    if (events.length && eventDeckBonuses.length) {\n      setEvent(events.find((elem) => elem.id === Number(eventId)));\n      setEventDeckBonus(\n        eventDeckBonuses.filter((elem) => elem.eventId === Number(eventId))\n      );\n    }\n  }, [events, eventId, eventDeckBonuses]);\n\n  useEffect(() => {\n    const currentTime = Date.now();\n    if (\n      event &&\n      currentTime >= event.startAt &&\n      currentTime <= event.rankingAnnounceAt + 5 * 60 * 1000\n    ) {\n      const cron = new CronJob(\"5 * * * * *\", () => {\n        const currentTime = Date.now();\n        if (currentTime > event.rankingAnnounceAt + 5 * 60 * 1000) cron.stop();\n        else {\n          refreshData();\n          setNextRefreshTime(cron.nextDate());\n        }\n      });\n      cron.start();\n      refreshData();\n      setNextRefreshTime(cron.nextDate());\n\n      const interval = window.setInterval(() => {\n        setNextRefreshTime((nextDate) => nextDate);\n      }, 60);\n\n      return () => {\n        cron.stop();\n        window.clearInterval(interval);\n      };\n    } else {\n      refreshData();\n    }\n  }, [refreshData, event]);\n\n  useEffect(() => {\n    if (!event) {\n      return;\n    }\n\n    let interval: number | undefined;\n\n    const update = () => {\n      if (Date.now() > event.aggregateAt) {\n        // event already ended\n        if (interval != null) {\n          window.clearInterval(interval);\n          interval = undefined;\n        }\n        setRemainingTime(t(\"event:alreadyEnded\"));\n        setPastTimePercent(100);\n        return false;\n      }\n\n      const progressPercent =\n        ((Date.now() - event.startAt) / (event.aggregateAt - event.startAt)) *\n        100;\n\n      setRemainingTime(\n        `${humanizeDuration(event.aggregateAt - Date.now(), {\n          units: [\"d\", \"h\", \"m\"],\n          round: true,\n        })} (${progressPercent.toFixed(1)}%)`\n      );\n\n      setPastTimePercent(progressPercent);\n      return true;\n    };\n\n    if (!update()) {\n      // event already ended\n      return;\n    }\n\n    interval = window.setInterval(update, 60000);\n\n    return () => {\n      if (interval != null) {\n        window.clearInterval(interval);\n        interval = undefined;\n      }\n    };\n  }, [event, t, humanizeDuration]);\n\n  function getRankingDegreeImg(reward: EventRankingRewardRange) {\n    const honor = honors.find(\n      (honor) =>\n        honor.id ===\n        resourceBoxes\n          .find(\n            (resBox) =>\n              resBox.resourceBoxPurpose === \"event_ranking_reward\" &&\n              resBox.id === reward.eventRankingRewards[0].resourceBoxId\n          )!\n          .details.find((detail) => detail.resourceType === \"honor\")!.resourceId\n    )!;\n\n    return `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/honor/${honor.assetbundleName}_rip/degree_main.webp`;\n  }\n\n  function getRankingDegreeName(reward: EventRankingRewardRange) {\n    const honor = honors.find(\n      (honor) =>\n        honor.id ===\n        resourceBoxes\n          .find(\n            (resBox) =>\n              resBox.resourceBoxPurpose === \"event_ranking_reward\" &&\n              resBox.id === reward.eventRankingRewards[0].resourceBoxId\n          )!\n          .details.find((detail) => detail.resourceType === \"honor\")!.resourceId\n    )!;\n\n    return honor.name;\n  }\n\n  function getRankingDegreeFrameImg(reward: EventRankingRewardRange) {\n    const honor = honors.find(\n      (honor) =>\n        honor.id ===\n        resourceBoxes\n          .find(\n            (resBox) =>\n              resBox.resourceBoxPurpose === \"event_ranking_reward\" &&\n              resBox.id === reward.eventRankingRewards[0].resourceBoxId\n          )!\n          .details.find((detail) => detail.resourceType === \"honor\")!.resourceId\n    )!;\n\n    return degreeFrameMap[honor.honorRarity];\n  }\n\n  function getRankingDegreeFrameName(reward: EventRankingRewardRange) {\n    const honor = honors.find(\n      (honor) =>\n        honor.id ===\n        resourceBoxes\n          .find(\n            (resBox) =>\n              resBox.resourceBoxPurpose === \"event_ranking_reward\" &&\n              resBox.id === reward.eventRankingRewards[0].resourceBoxId\n          )!\n          .details.find((detail) => detail.resourceType === \"honor\")!.resourceId\n    )!;\n\n    return honor.honorRarity;\n  }\n\n  function getRankingDegreeRankImg(reward: EventRankingRewardRange) {\n    const honor = honors.find(\n      (honor) =>\n        honor.id ===\n        resourceBoxes\n          .find(\n            (resBox) =>\n              resBox.resourceBoxPurpose === \"event_ranking_reward\" &&\n              resBox.id === reward.eventRankingRewards[0].resourceBoxId\n          )!\n          .details.find((detail) => detail.resourceType === \"honor\")!.resourceId\n    )!;\n\n    return `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/honor/${honor.assetbundleName}_rip/rank_main.webp`;\n  }\n\n  function getRankingDegreeRankName(reward: EventRankingRewardRange) {\n    const honor = honors.find(\n      (honor) =>\n        honor.id ===\n        resourceBoxes\n          .find(\n            (resBox) =>\n              resBox.resourceBoxPurpose === \"event_ranking_reward\" &&\n              resBox.id === reward.eventRankingRewards[0].resourceBoxId\n          )!\n          .details.find((detail) => detail.resourceType === \"honor\")!.resourceId\n    )!;\n\n    return honor.levels[0].description;\n  }\n\n  const getEventImages: () => ImageDecorator[] = useCallback(\n    () =>\n      event\n        ? [\n            {\n              src: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/event/${event.assetbundleName}/screen_rip/bg.webp`,\n              alt: \"event background\",\n              downloadUrl: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/event/${event.assetbundleName}/screen_rip/bg.webp`,\n            },\n            {\n              src: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/event/${event.assetbundleName}/screen_rip/character.webp`,\n              alt: \"event character\",\n              downloadUrl: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/event/${event.assetbundleName}/screen_rip/character.webp`,\n            },\n          ]\n        : [],\n    [event]\n  );\n\n  return event && eventDeckBonus.length && gameCharacterUnits.length ? (\n    <Fragment>\n      <Typography variant=\"h6\" className={layoutClasses.header}>\n        {contentTransMode === \"original\"\n          ? event.name\n          : contentTransMode === \"translated\"\n          ? assetT(`event_name:${eventId}`, event.name)\n          : event.name}\n      </Typography>\n      <Container className={layoutClasses.content} maxWidth=\"sm\">\n        <TabContext value={imgTabVal}>\n          <Paper>\n            <Tabs\n              value={imgTabVal}\n              onChange={(_, v) => setImgTabVal(v)}\n              variant=\"scrollable\"\n              scrollButtons=\"desktop\"\n            >\n              <Tab value=\"0\" label={t(\"event:tab.title[0]\")}></Tab>\n              <Tab value=\"1\" label={t(\"event:tab.title[1]\")}></Tab>\n              <Tab value=\"2\" label={t(\"event:tab.title[2]\")}></Tab>\n            </Tabs>\n            <TabPanel value=\"0\" classes={{ root: classes.tabpanel }}>\n              <Grid container direction=\"row\">\n                <Grid item xs={12} md={6}>\n                  <img\n                    className={classes.bannerImg}\n                    src={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/event/${event.assetbundleName}/logo_rip/logo.webp`}\n                    alt=\"logo\"\n                  ></img>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <img\n                    className={classes.bannerImg}\n                    src={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/home/banner/${event.assetbundleName}_rip/${event.assetbundleName}.webp`}\n                    alt=\"logo\"\n                  ></img>\n                </Grid>\n              </Grid>\n            </TabPanel>\n            <TabPanel value=\"1\" classes={{ root: classes.tabpanel }}>\n              <img\n                onClick={() => {\n                  setActiveIdx(0);\n                  setVisible(true);\n                }}\n                className={classes.eventImg}\n                src={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/event/${event.assetbundleName}/screen_rip/bg.webp`}\n                alt=\"background\"\n              ></img>\n            </TabPanel>\n            <TabPanel value=\"2\" classes={{ root: classes.tabpanel }}>\n              <img\n                onClick={() => {\n                  setActiveIdx(1);\n                  setVisible(true);\n                }}\n                className={classes.eventImg}\n                src={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/event/${event.assetbundleName}/screen_rip/character.webp`}\n                alt=\"character\"\n              ></img>\n            </TabPanel>\n          </Paper>\n        </TabContext>\n        <audio\n          style={{ width: \"100%\", margin: \"1% 0\" }}\n          controls\n          src={`${\n            process.env.REACT_APP_ASSET_DOMAIN\n          }/file/sekai-assets/${event.bgmAssetbundleName.replace(\n            \"bgm\",\n            \"bgm_rip\"\n          )}.mp3`}\n        ></audio>\n        <Grid className={classes[\"grid-out\"]} container direction=\"column\">\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"event:remainingTime\")} ({t(\"event:progress\")})\n            </Typography>\n            <Typography>{remainingTime}</Typography>\n          </Grid>\n          <LinearProgress variant=\"determinate\" value={pastTimePercent} />\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"common:id\")}\n            </Typography>\n            <Typography>{event.id}</Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"common:title\")}\n            </Typography>\n            <Typography>\n              {contentTransMode === \"original\"\n                ? event.name\n                : contentTransMode === \"translated\"\n                ? assetT(`event_name:${eventId}`, event.name)\n                : event.name}\n            </Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"common:type\")}\n            </Typography>\n            <Typography>{t(`event:type.${event.eventType}`)}</Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"event:boostAttribute\")}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              container\n              xs={6}\n              spacing={1}\n              alignItems=\"center\"\n              justify=\"space-between\"\n            >\n              <Grid\n                item\n                xs={6}\n                sm={10}\n                container\n                spacing={1}\n                justify=\"flex-end\"\n              >\n                <Grid item>\n                  <img\n                    style={{ maxHeight: \"36px\" }}\n                    src={attrIconMap[eventDeckBonus[0].cardAttr]}\n                    alt={eventDeckBonus[0].cardAttr}\n                  ></img>\n                </Grid>\n              </Grid>\n              <Grid item xs={4} sm={2}>\n                <Typography>+{eventDeckBonus[6].bonusRate}%</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={4}>\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"event:boostCharacters\")}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              container\n              spacing={1}\n              xs={5}\n              sm={6}\n              alignItems=\"center\"\n              justify=\"space-between\"\n            >\n              <Grid item container spacing={1} xs={6} sm={10}>\n                {eventDeckBonus.slice(0, 5).map((elem, idx) => (\n                  <Grid key={`chara-${idx}`} item>\n                    <img\n                      style={{ maxHeight: \"36px\" }}\n                      src={\n                        charaIcons[\n                          `CharaIcon${\n                            gameCharacterUnits.find(\n                              (gcu) => gcu.id === elem.gameCharacterUnitId\n                            )!.gameCharacterId\n                          }`\n                        ]\n                      }\n                      alt={`character ${\n                        gameCharacterUnits.find(\n                          (gcu) => gcu.id === elem.gameCharacterUnitId\n                        )!.gameCharacterId\n                      }`}\n                    ></img>\n                  </Grid>\n                ))}\n              </Grid>\n              <Grid item xs={5} sm={2}>\n                <Typography>+{eventDeckBonus[6].bonusRate}%</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"event:maxBoost\")}\n            </Typography>\n            <Typography>+50%</Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"common:startAt\")}\n            </Typography>\n            <Typography align=\"right\">\n              {new Date(event.startAt).toLocaleString()}\n            </Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"common:endAt\")}\n            </Typography>\n            <Typography align=\"right\">\n              {new Date(event.closedAt).toLocaleString()}\n            </Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"event:aggregateAt\")}\n            </Typography>\n            <Typography align=\"right\">\n              {new Date(event.aggregateAt).toLocaleString()}\n            </Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"event:rankingAnnounceAt\")}\n            </Typography>\n            <Typography align=\"right\">\n              {new Date(event.rankingAnnounceAt).toLocaleString()}\n            </Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"event:distributionStartAt\")}\n            </Typography>\n            <Typography align=\"right\">\n              {new Date(event.distributionStartAt).toLocaleString()}\n            </Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n          <Grid\n            item\n            container\n            direction=\"row\"\n            wrap=\"nowrap\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"event:distributionEndAt\")}\n            </Typography>\n            <Typography align=\"right\">\n              {new Date(event.distributionEndAt).toLocaleString()}\n            </Typography>\n          </Grid>\n          <Divider style={{ margin: \"1% 0\" }} />\n        </Grid>\n      </Container>\n      {rtRanking.time ? (\n        <Fragment>\n          <Typography variant=\"h6\" className={layoutClasses.header}>\n            {t(\"event:ranking\")}\n          </Typography>\n          <Container className={layoutClasses.content} maxWidth=\"sm\">\n            <Paper style={{ padding: \"2%\" }}>\n              <Typography variant=\"h6\">\n                {t(\"event:realtime\")}{\" \"}\n                {new Date(rtRanking.time).toLocaleString(i18n.language)}\n              </Typography>\n              {nextRefreshTime ? (\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {t(\"event:nextfetch\")}: {nextRefreshTime.fromNow()}\n                </Typography>\n              ) : null}\n              <Divider style={{ margin: \"1% 0\" }} />\n              <Grid container direction=\"column\">\n                {resourceBoxes.length && honors.length\n                  ? event.eventRankingRewardRanges.map((elem) =>\n                      elem.fromRank >= 100001 ? null : (\n                        <Fragment key={elem.toRank}>\n                          <Grid\n                            item\n                            container\n                            justify=\"space-between\"\n                            alignItems=\"center\"\n                          >\n                            <Grid item xs={6} md={4}>\n                              <Box position=\"relative\">\n                                <img\n                                  style={{\n                                    position: \"absolute\",\n                                    top: 0,\n                                    left: elem.fromRank >= 10001 ? \"2%\" : 0,\n                                    maxWidth:\n                                      elem.fromRank >= 10001 ? \"96%\" : \"100%\",\n                                  }}\n                                  src={getRankingDegreeFrameImg(elem)}\n                                  alt={getRankingDegreeFrameName(elem)}\n                                ></img>\n                                <img\n                                  style={{ maxWidth: \"100%\" }}\n                                  src={getRankingDegreeImg(elem)}\n                                  alt={getRankingDegreeName(elem)}\n                                ></img>\n                                <img\n                                  style={{\n                                    position: \"absolute\",\n                                    right: \"10.5%\",\n                                    maxHeight: \"80%\",\n                                    top: \"6%\",\n                                  }}\n                                  src={getRankingDegreeRankImg(elem)}\n                                  alt={getRankingDegreeRankName(elem)}\n                                ></img>\n                              </Box>\n                            </Grid>\n                            <Grid item xs={6} container alignItems=\"center\">\n                              <Grid item xs={12} md={6}>\n                                <Typography align=\"right\">\n                                  {\n                                    (elem.toRank <= 10\n                                      ? rtRanking.first10.find(\n                                          (rt) => rt.rank === elem.toRank\n                                        )!\n                                      : rtRanking[\n                                          `rank${elem.toRank}` as \"rank20\"\n                                        ][0] || { name: \"\" }\n                                    ).name\n                                  }\n                                </Typography>\n                              </Grid>\n                              <Grid item xs={12} md={6}>\n                                <Typography variant=\"h6\" align=\"right\">\n                                  {\n                                    (elem.toRank <= 10\n                                      ? rtRanking.first10.find(\n                                          (rt) => rt.rank === elem.toRank\n                                        )!\n                                      : rtRanking[\n                                          `rank${elem.toRank}` as \"rank20\"\n                                        ][0] || { score: \"N/A\" }\n                                    ).score\n                                  }\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                          <Divider style={{ margin: \"1% 0\" }} />\n                        </Fragment>\n                      )\n                    )\n                  : null}\n              </Grid>\n            </Paper>\n          </Container>\n          <Viewer\n            visible={visible}\n            onClose={() => setVisible(false)}\n            images={getEventImages()}\n            zIndex={2000}\n            activeIndex={activeIdx}\n            downloadable\n            downloadInNewWindow\n            onMaskClick={() => setVisible(false)}\n            zoomSpeed={0.25}\n            onChange={(_, idx) => setActiveIdx(idx)}\n          />\n        </Fragment>\n      ) : null}\n    </Fragment>\n  ) : (\n    <div>\n      Loading... If you saw this for a while, event {eventId} does not exist.\n    </div>\n  );\n};\n\nexport default EventDetail;\n"],"sourceRoot":""}