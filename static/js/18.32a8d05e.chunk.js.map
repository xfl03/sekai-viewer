{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/GachaDetail.tsx"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","gachaImageNameMap","1","bg","feature","2","3","useStyles","makeStyles","theme","media","paddingTop","cursor","card","margin","spacing","tabpanel","subheader","overflow","gachaBtn","getGachaImages","gacha","ret","id","push","src","process","assetbundleName","alt","downloadUrl","StarIcon","num","Array","from","length","map","_","idx","key","rarityNormal","height","GachaDetailPage","contentTransMode","layoutClasses","useLayoutStyles","gachaId","useParams","t","useTranslation","useAssetI18n","assetT","assetI18n","useState","setGacha","useCachedData","gachas","visible","setVisible","picTabVal","setPicTabVal","activeIdx","setActiveIdx","total","rarity1","rarity2","rarity3","rarity4","statistic","setStatistic","currentGachaResult","setCurrentGachaResult","useRefState","isReadyRef","setIsReady","cards","doGacha","times","rollTimes","rollResult","rarity1Rate","rarity2Rate","rarity3Rate","rarity4Rate","must3RollResult","rollCards","gachaDetails","filter","elem","find","cardId","rarity","tmpGachaResult","noStar3Count","i","roll","Math","random","s","Object","assign","floor","console","log","slice","useEffect","Boolean","Number","document","title","variant","header","content","maxWidth","value","onChange","event","newValue","scrollButtons","label","onClick","image","gachaInformation","description","split","str","line","paragraph","summary","color","style","marginRight","toFixed","cardIds","paddingX","display","flexDirection","flexWrap","justifyContent","alignItems","paddingY","fontWeight","Date","startAt","toLocaleString","endAt","gachaType","container","wrap","justify","count","gachaPickups","item","direction","xs","md","onClose","images","zIndex","activeIndex","downloadable","downloadInNewWindow","onMaskClick","zoomSpeed"],"mappings":"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","file":"static/js/18.32a8d05e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Grid,\n  makeStyles,\n  Paper,\n  Tab,\n  Tabs,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { useLayoutStyles } from \"../styles/layout\";\n// import { Star as StarIcon } from \"@material-ui/icons\";\nimport { TabContext, TabPanel } from \"@material-ui/lab\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Viewer from \"react-viewer\";\nimport { ImageDecorator } from \"react-viewer/lib/ViewerProps\";\nimport {\n  ContentTransModeType,\n  GachaDetail,\n  GachaStatistic,\n  ICardInfo,\n  IGachaInfo,\n} from \"../types\";\nimport { useCachedData, useRefState } from \"../utils\";\nimport { CardThumb, CardThumbs } from \"./subs/CardThumb\";\nimport rarityNormal from \"../assets/rarity_star_normal.png\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAssetI18n } from \"../utils/i18n\";\n\nconst gachaImageNameMap: {\n  [key: number]: {\n    bg: string;\n    feature?: string;\n  };\n} = {\n  1: {\n    bg: \"bg_gacha1\",\n    feature: \"img_gacha1_1\",\n  },\n  2: {\n    bg: \"bg_gacha_rare3_ticket_2020\",\n  },\n  3: {\n    bg: \"bg_gacha_virtualsinger_2020\",\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    paddingTop: \"56.25%\",\n    cursor: \"pointer\",\n  },\n  card: {\n    margin: theme.spacing(0.5),\n  },\n  tabpanel: {\n    padding: theme.spacing(\"1%\", 0, 0, 0),\n  },\n  subheader: {\n    \"white-space\": \"nowrap\",\n    overflow: \"hidden\",\n    \"text-overflow\": \"ellipsis\",\n    \"max-width\": \"260px\",\n  },\n  gachaBtn: {\n    margin: theme.spacing(0, 1),\n  },\n}));\n\nfunction getGachaImages(gacha: IGachaInfo): ImageDecorator[] {\n  const ret: ImageDecorator[] = [];\n  if (gachaImageNameMap[gacha.id]) {\n    if (gachaImageNameMap[gacha.id].bg) {\n      ret.push({\n        src: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/gacha/${\n          gacha.assetbundleName\n        }/screen_rip/texture/${gachaImageNameMap[gacha.id].bg}.webp`,\n        alt: \"background\",\n        downloadUrl: `${\n          process.env.REACT_APP_ASSET_DOMAIN\n        }/file/sekai-assets/gacha/${gacha.assetbundleName}/screen_rip/texture/${\n          gachaImageNameMap[gacha.id].bg\n        }.webp`,\n      });\n    }\n    if (gachaImageNameMap[gacha.id].feature) {\n      ret.push({\n        src: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/gacha/${\n          gacha.assetbundleName\n        }/screen_rip/texture/${gachaImageNameMap[gacha.id].feature}.webp`,\n        alt: \"feature\",\n        downloadUrl: `${\n          process.env.REACT_APP_ASSET_DOMAIN\n        }/file/sekai-assets/gacha/${gacha.assetbundleName}/screen_rip/texture/${\n          gachaImageNameMap[gacha.id].feature\n        }.webp`,\n      });\n    }\n  } else {\n    ret.push({\n      src: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/gacha/${gacha.assetbundleName}/screen_rip/texture/bg_gacha${gacha.id}.webp`,\n      alt: \"background\",\n      downloadUrl: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/gacha/${gacha.assetbundleName}/screen_rip/texture/bg_gacha${gacha.id}.webp`,\n    });\n    ret.push({\n      src: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/gacha/${gacha.assetbundleName}/screen_rip/texture/img_gacha${gacha.id}.webp`,\n      alt: \"feature\",\n      downloadUrl: `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/gacha/${gacha.assetbundleName}/screen_rip/texture/img_gacha${gacha.id}.webp`,\n    });\n  }\n\n  return ret;\n}\n\nconst StarIcon: React.FC<{ num: number }> = ({ num }) => (\n  <Fragment>\n    {Array.from({ length: num }).map((_, idx) => (\n      <img key={idx} src={rarityNormal} alt=\"star\" height=\"24px\" />\n    ))}\n  </Fragment>\n);\n\nconst GachaDetailPage: React.FC<{\n  contentTransMode: ContentTransModeType;\n}> = ({ contentTransMode }) => {\n  const classes = useStyles();\n  const layoutClasses = useLayoutStyles();\n  const { gachaId } = useParams<{ gachaId: string }>();\n  const { t } = useTranslation();\n  const { assetT, assetI18n } = useAssetI18n();\n\n  const [gacha, setGacha] = useState<IGachaInfo>();\n  const [gachas] = useCachedData<IGachaInfo>(\"gachas\");\n  const [visible, setVisible] = useState<boolean>(false);\n  const [picTabVal, setPicTabVal] = useState<string>(\"4\");\n  const [activeIdx, setActiveIdx] = useState<number>(0);\n  const [statistic, setStatistic] = useState<GachaStatistic>({\n    total: 0,\n    rarity1: 0,\n    rarity2: 0,\n    rarity3: 0,\n    rarity4: 0,\n  });\n  const [currentGachaResult, setCurrentGachaResult] = useState<GachaDetail[]>(\n    []\n  );\n\n  const [, isReadyRef, setIsReady] = useRefState<boolean>(false);\n\n  const [cards] = useCachedData<ICardInfo>(\"cards\");\n\n  function doGacha(times: number) {\n    const rollTimes = times;\n    const rollResult = [\n      gacha?.rarity1Rate,\n      gacha?.rarity1Rate! + gacha?.rarity2Rate!,\n      gacha?.rarity1Rate! + gacha?.rarity2Rate! + gacha?.rarity3Rate!,\n      gacha?.rarity1Rate! +\n        gacha?.rarity2Rate! +\n        gacha?.rarity3Rate! +\n        gacha?.rarity4Rate!,\n    ];\n    const must3RollResult = [100 - gacha?.rarity4Rate!, 100];\n    const rollCards = [\n      gacha?.gachaDetails.filter(\n        (elem) => cards.find((card) => card.id === elem.cardId)?.rarity === 1\n      )!,\n      gacha?.gachaDetails.filter(\n        (elem) => cards.find((card) => card.id === elem.cardId)?.rarity === 2\n      )!,\n      gacha?.gachaDetails.filter(\n        (elem) => cards.find((card) => card.id === elem.cardId)?.rarity === 3\n      )!,\n      gacha?.gachaDetails.filter(\n        (elem) => cards.find((card) => card.id === elem.cardId)?.rarity === 4\n      )!,\n    ];\n    const tmpGachaResult: GachaDetail[] = [];\n    let noStar3Count = 0;\n    for (let i = 0; i < rollTimes; i++) {\n      if (i % 10 === 9 && noStar3Count === 9) {\n        // only roll 3* or 4*\n        const roll = Math.random() * 99 + 1;\n        if (roll < must3RollResult[0]) {\n          // get 3* card\n          setStatistic((s) =>\n            Object.assign({}, s, {\n              total: s.total + 1,\n              rarity3: s.rarity3 + 1,\n            })\n          );\n          // roll a 3* card\n          tmpGachaResult.push(\n            rollCards[2][Math.floor(Math.random() * rollCards[2]?.length)]\n          );\n        } else if (roll < must3RollResult[1]) {\n          // get 4* card\n          setStatistic((s) =>\n            Object.assign({}, s, {\n              total: s.total + 1,\n              rarity4: s.rarity4 + 1,\n            })\n          );\n          // roll a 4* card\n          tmpGachaResult.push(\n            rollCards[3][Math.floor(Math.random() * rollCards[3]?.length)]\n          );\n        } else {\n          console.log(roll, must3RollResult);\n        }\n        noStar3Count = 0;\n        continue;\n      } else if (i % 10 === 0) {\n        noStar3Count = 0;\n      }\n      const roll = Math.random() * 99 + 1;\n      if (roll <= rollResult[0]!) {\n        // get 1* card\n        setStatistic((s) =>\n          Object.assign({}, s, {\n            total: s.total + 1,\n            rarity1: s.rarity1 + 1,\n          })\n        );\n        // roll a 1* card\n        tmpGachaResult.push(\n          rollCards[0][Math.floor(Math.random() * rollCards[0]?.length)]\n        );\n        noStar3Count++;\n      } else if (roll <= rollResult[1]!) {\n        // get 2* card\n        setStatistic((s) =>\n          Object.assign({}, s, {\n            total: s.total + 1,\n            rarity2: s.rarity2 + 1,\n          })\n        );\n        // roll a 2* card\n        tmpGachaResult.push(\n          rollCards[1][Math.floor(Math.random() * rollCards[1]?.length)]\n        );\n        noStar3Count++;\n      } else if (roll <= rollResult[2]!) {\n        // get 3* card\n        setStatistic((s) =>\n          Object.assign({}, s, {\n            total: s.total + 1,\n            rarity3: s.rarity3 + 1,\n          })\n        );\n        // roll a 3* card\n        tmpGachaResult.push(\n          rollCards[2][Math.floor(Math.random() * rollCards[2]?.length)]\n        );\n      } else if (roll <= rollResult[3]!) {\n        // get 4* card\n        setStatistic((s) =>\n          Object.assign({}, s, {\n            total: s.total + 1,\n            rarity4: s.rarity4 + 1,\n          })\n        );\n        // roll a 4* card\n        tmpGachaResult.push(\n          rollCards[3][Math.floor(Math.random() * rollCards[3]?.length)]\n        );\n      } else {\n        console.log(roll, rollResult);\n      }\n    }\n\n    setCurrentGachaResult(tmpGachaResult.slice(-10));\n  }\n\n  function resetGacha() {\n    setStatistic({\n      total: 0,\n      rarity1: 0,\n      rarity2: 0,\n      rarity3: 0,\n      rarity4: 0,\n    });\n    setCurrentGachaResult([]);\n  }\n\n  useEffect(() => {\n    setIsReady(Boolean(gachas.length));\n\n    if (Boolean(gachas.length))\n      setGacha(gachas.find((elem) => elem.id === Number(gachaId)));\n  }, [setIsReady, gachaId, gachas]);\n\n  useEffect(() => {\n    if (gacha) {\n      document.title = `${\n        contentTransMode === \"original\"\n          ? gacha.name\n          : contentTransMode === \"translated\"\n          ? assetT(`gacha_name:${gachaId}`, gacha.name)\n          : gacha.name\n      } | Gacha | Sekai Viewer`;\n    }\n  }, [gacha, assetI18n, contentTransMode, gachaId, assetT]);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n    setPicTabVal(newValue);\n  };\n\n  if (isReadyRef && gacha) {\n    return (\n      <Fragment>\n        <Typography variant=\"h6\" className={layoutClasses.header}>\n          {contentTransMode === \"original\"\n            ? gacha.name\n            : contentTransMode === \"translated\"\n            ? assetT(`gacha_name:${gachaId}`, gacha.name)\n            : gacha.name}\n        </Typography>\n        <Container className={layoutClasses.content} maxWidth=\"sm\">\n          <TabContext value={picTabVal}>\n            <Paper>\n              <Tabs\n                value={picTabVal}\n                onChange={handleChange}\n                variant=\"scrollable\"\n                scrollButtons=\"desktop\"\n              >\n                <Tab label={t(\"gacha:tab.title[0]\")} value=\"2\"></Tab>\n                <Tab label={t(\"gacha:tab.title[1]\")} value=\"3\"></Tab>\n                <Tab label={t(\"gacha:tab.title[2]\")} value=\"4\"></Tab>\n                <Tab label={t(\"gacha:tab.title[3]\")} value=\"0\"></Tab>\n                {gachaImageNameMap[gacha.id] ? (\n                  gachaImageNameMap[gacha.id].feature ? (\n                    <Tab label={t(\"gacha:tab.title[4]\")} value=\"1\"></Tab>\n                  ) : null\n                ) : gacha.id >= 4 ? (\n                  <Tab label={t(\"gacha:tab.title[4]\")} value=\"1\"></Tab>\n                ) : null}\n              </Tabs>\n              <TabPanel value=\"0\" classes={{ root: classes.tabpanel }}>\n                <Card\n                  onClick={() => {\n                    setActiveIdx(0);\n                    setVisible(true);\n                  }}\n                >\n                  <CardMedia\n                    className={classes.media}\n                    image={\n                      gacha\n                        ? `${\n                            process.env.REACT_APP_ASSET_DOMAIN\n                          }/file/sekai-assets/gacha/${\n                            gacha.assetbundleName\n                          }/screen_rip/texture/${\n                            gachaImageNameMap[gacha.id]\n                              ? gachaImageNameMap[gacha.id].bg\n                              : `bg_gacha${gachaId}`\n                          }.webp`\n                        : \"\"\n                    }\n                  ></CardMedia>\n                </Card>\n              </TabPanel>\n              <TabPanel value=\"1\" classes={{ root: classes.tabpanel }}>\n                <Card\n                  onClick={() => {\n                    setActiveIdx(1);\n                    setVisible(true);\n                  }}\n                >\n                  <CardMedia\n                    className={classes.media}\n                    image={\n                      gacha\n                        ? `${\n                            process.env.REACT_APP_ASSET_DOMAIN\n                          }/file/sekai-assets/gacha/${\n                            gacha.assetbundleName\n                          }/screen_rip/texture/${\n                            gachaImageNameMap[gacha.id]\n                              ? gachaImageNameMap[gacha.id].feature\n                              : `img_gacha${gachaId}`\n                          }.webp`\n                        : \"\"\n                    }\n                  ></CardMedia>\n                </Card>\n              </TabPanel>\n              <TabPanel value=\"2\" classes={{ root: classes.tabpanel }}>\n                <Card>\n                  <CardContent>\n                    {gacha.gachaInformation.description\n                      .split(\"\\n\")\n                      .map((str, line) => (\n                        <Typography\n                          paragraph\n                          variant=\"body2\"\n                          key={`desc-${line}`}\n                        >\n                          {str}\n                        </Typography>\n                      ))}\n                  </CardContent>\n                </Card>\n              </TabPanel>\n              <TabPanel value=\"3\" classes={{ root: classes.tabpanel }}>\n                <Card>\n                  <CardContent>\n                    {gacha.gachaInformation.summary\n                      .split(\"\\n\")\n                      .map((str, line) => (\n                        <Typography\n                          paragraph\n                          variant=\"body2\"\n                          key={`summary-${line}`}\n                        >\n                          {str}\n                        </Typography>\n                      ))}\n                  </CardContent>\n                </Card>\n              </TabPanel>\n              <TabPanel value=\"4\" classes={{ root: classes.tabpanel }}>\n                <Card>\n                  <CardContent>\n                    <Typography paragraph>\n                      <StarIcon num={2} />\n                      {gacha.rarity2Rate} % <StarIcon num={3} />\n                      {gacha.rarity3Rate} % <StarIcon num={4} />\n                      {gacha.rarity4Rate} %\n                    </Typography>\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        className={classes.gachaBtn}\n                        color=\"secondary\"\n                        onClick={() => doGacha(1)}\n                      >\n                        Gacha!\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        className={classes.gachaBtn}\n                        color=\"primary\"\n                        onClick={() => doGacha(10)}\n                      >\n                        Gacha * 10\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        className={classes.gachaBtn}\n                        color=\"primary\"\n                        onClick={() => doGacha(100)}\n                      >\n                        Gacha * 100\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        className={classes.gachaBtn}\n                        color=\"primary\"\n                        onClick={() => doGacha(1000)}\n                      >\n                        Gacha * 1000\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        className={classes.gachaBtn}\n                        color=\"primary\"\n                        onClick={() => resetGacha()}\n                      >\n                        Reset\n                      </Button>\n                    </div>\n                    <Typography paragraph>\n                      <span style={{ marginRight: \"1%\" }}>\n                        Total: {statistic.total}\n                      </span>\n                      <StarIcon num={2} />\n                      {statistic.rarity2}{\" \"}\n                      {statistic.total\n                        ? ((statistic.rarity2 / statistic.total) * 100).toFixed(\n                            2\n                          )\n                        : 0}{\" \"}\n                      %\n                      <StarIcon num={3} />\n                      {statistic.rarity3}{\" \"}\n                      {statistic.total\n                        ? ((statistic.rarity3 / statistic.total) * 100).toFixed(\n                            2\n                          )\n                        : 0}{\" \"}\n                      %\n                      <StarIcon num={4} />\n                      {statistic.rarity4}{\" \"}\n                      {statistic.total\n                        ? ((statistic.rarity4 / statistic.total) * 100).toFixed(\n                            2\n                          )\n                        : 0}{\" \"}\n                      %\n                    </Typography>\n                  </CardContent>\n                  <CardContent>\n                    <CardThumbs\n                      cardIds={currentGachaResult.map((elem) => elem.cardId)}\n                    />\n                  </CardContent>\n                </Card>\n              </TabPanel>\n            </Paper>\n          </TabContext>\n          {/* <Container style={{marginTop: '2%'}} maxWidth=\"sm\"> */}\n          <Box paddingX=\"2%\" display=\"flex\" flexDirection=\"column\">\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              flexWrap=\"no-wrap\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              paddingY=\"1%\"\n            >\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"common:id\")}\n              </Typography>\n              <Typography>{gacha.id}</Typography>\n            </Box>\n            <Divider />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              flexWrap=\"no-wrap\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              paddingY=\"1%\"\n            >\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"common:title\")}\n              </Typography>\n              <Typography>\n                {contentTransMode === \"original\"\n                  ? gacha.name\n                  : contentTransMode === \"translated\"\n                  ? assetT(`gacha_name:${gachaId}`, gacha.name)\n                  : gacha.name}\n              </Typography>\n            </Box>\n            <Divider />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              flexWrap=\"no-wrap\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              paddingY=\"1%\"\n            >\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"common:icon\")}\n              </Typography>\n              <img\n                style={{ maxWidth: \"50%\" }}\n                src={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/gacha/${gacha.assetbundleName}/logo_rip/logo.webp`}\n                alt=\"logo icon\"\n              ></img>\n            </Box>\n            <Divider />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              flexWrap=\"no-wrap\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              paddingY=\"1%\"\n            >\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"common:startAt\")}\n              </Typography>\n              <Typography>\n                {new Date(gacha.startAt).toLocaleString()}\n              </Typography>\n            </Box>\n            <Divider />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              flexWrap=\"no-wrap\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              paddingY=\"1%\"\n            >\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"common:endAt\")}\n              </Typography>\n              <Typography>{new Date(gacha.endAt).toLocaleString()}</Typography>\n            </Box>\n            <Divider />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              flexWrap=\"no-wrap\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              paddingY=\"1%\"\n            >\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"common:type\")}\n              </Typography>\n              <Typography>\n                {t(`gacha:gachaType.${gacha.gachaType as \"ceil\"}`)}\n              </Typography>\n            </Box>\n            <Divider />\n            <Grid\n              container\n              wrap=\"nowrap\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              style={{ padding: \"1% 0\" }}\n            >\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"gacha:pickupMember\", { count: gacha.gachaPickups.length })}\n              </Typography>\n              <Grid\n                item\n                container\n                direction=\"row\"\n                xs={6}\n                spacing={1}\n                justify=\"flex-end\"\n              >\n                {gacha.gachaPickups.map((elem) => (\n                  <Grid key={`pickup-${elem.id}`} item xs={8} md={4}>\n                    <CardThumb id={elem.cardId} />\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n            <Divider />\n          </Box>\n          {/* </Container> */}\n        </Container>\n        <Viewer\n          visible={visible}\n          onClose={() => setVisible(false)}\n          images={getGachaImages(gacha)}\n          zIndex={2000}\n          activeIndex={activeIdx}\n          downloadable\n          downloadInNewWindow\n          onMaskClick={() => setVisible(false)}\n          zoomSpeed={0.25}\n          onChange={(_, idx) => setActiveIdx(idx)}\n        />\n      </Fragment>\n    );\n  } else {\n    return (\n      <div>\n        Loading... If you saw this for a while, gacha {gachaId} does not exist.\n      </div>\n    );\n  }\n};\n\nexport default GachaDetailPage;\n"],"sourceRoot":""}